Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

--SQL Code.
SELECT COUNT(*)
FROM table
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

--SQL Code
SELECT COUNT(DISTICT(key))
FROM table

i. Business = id:10000
ii. Hours = business_id: 1562
iii. Category = business_id:2643
iv. Attribute = business_id: 1115
v. Review = id: 10000, business_id: 8090, user_id:9581
vi. Checkin = business_id: 493
vii. Photo = id: 10000, photo: 6493
viii. Tip = user_id: 537, business_id:3979
ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:

SELECT COUNT(*)
FROM user
WHERE id IS NULL
OR name IS NULL
OR review_count IS NULL
OR yelping:since IS NULL
OR useful IS NULL
OR funny IS NULL
OR cool IS NULL
OR fans IS NULL
OR average_stars IS NULL
OR compliment_hot IS NULL
OR compliment_more IS NULL
OR compliment_profile IS NULL
OR compliment_cute IS NULL
OR compliment_list IS NULL
OR compliment_note IS NULL
OR compliment_plain IS NULL
OR compliment_cool IS NULL
OR compliment_funny IS NULL
OR compliment_writer IS NULL
OR compliment_photos IS NULL

4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

--SQL Code
SELECT MIN(column), MAX(column), AVG(column)
FROM table

	i. Table: Review, Column: Stars
	
		min:	1	max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0114
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

       SQL code used to arrive at answer:

SELECT city, SUM(review_count) AS reviews
FROM buisness
GROUP BY city
ORDER BY reviews DESC
	
       Copy and Paste the Result Below:
	
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montr√©al        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

  i. Avon

SQL code used to arrive at answer:

SELECT stars, SUM(review_count) AS count,
FROM business
WHERE city == 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns - star rating and count):

+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |    10 |
|   2.5 |     6 |
|   3.5 |    88 |
|   4.0 |    21 |
|   4.5 |    31 |
|   5.0 |     3 |
+-------+-------+	

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars, SUM(review_count) AS count
FROM business
WHERE city == 'Beachwood'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns - star rating and count):
		
+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     8 |
|   2.5 |     3 |
|   3.0 |    11 |
|   3.5 |     6 |
|   4.0 |    69 |
|   4.5 |    17 |
|   5.0 |    23 |
+-------+-------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT id, name, review_count
FROM user
ORDER BY review_count DESC
LIMIT 3	
		
	Copy and Paste the Result Below:
		
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+

8. Does posing more reviews correlate with more fans?

Please explain your findings and interpretation of the results:

--Posting more reviews does not necesaarily correlate with having more fans.
--The user with most fans doesn't have the highest amount of posted reviews. Many factors such as how long a user has been on Yelp and the quality of the
--reviews cold be a factor as well.

--SQL Code
SELECT name, review_count, fans, yelping_since, text
FROM user LEFT JOIN review ON user.id=review.user_id
ORDER BY review_count DESC
LIMIT 10

+-----------+--------------+------+---------------------+------+
| name      | review_count | fans | yelping_since       | text |
+-----------+--------------+------+---------------------+------+
| Gerald    |         2000 |  253 | 2012-12-16 00:00:00 | None |
| Sara      |         1629 |   50 | 2010-05-16 00:00:00 | None |
| Yuri      |         1339 |   76 | 2008-01-03 00:00:00 | None |
| .Hon      |         1246 |  101 | 2006-07-19 00:00:00 | None |
| William   |         1215 |  126 | 2015-02-19 00:00:00 | None |
| Harald    |         1153 |  311 | 2012-11-27 00:00:00 | None |
| eric      |         1116 |   16 | 2007-05-27 00:00:00 | None |
| Roanna    |         1039 |  104 | 2006-03-28 00:00:00 | None |
| Mimi      |          968 |  497 | 2011-03-30 00:00:00 | None |
| Christine |          930 |  173 | 2009-07-08 00:00:00 | None |
+-----------+--------------+------+---------------------+------+

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: The word "love" is found in 1780 reviews while the word "hate" is found
                in 232 reviews. 
	
	SQL code used to arrive at answer:

SELECT COUNT(*)
FROM review
WHERE text LIKE '%love%'

SELECT COUNT(*)
FROM review
WHERE text LIKE '%hate%'
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT user.id, name, fans
FROM user
ORDER BY fans DESC
LIMIT 10	
	
	Copy and Paste the Result Below:

+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

--City: Mesa. Category: Food.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

--Yes.

ii. Do the two groups you chose to analyze have a different number of reviews?

--Yes.         
         
iii. Are you able to infer anything from the location data provided between these two groups?

--There seems to be a correlation between the location of the business and their rating.
Businesses that are located close to each other have similar rating and similar opening hours.
It's also worth noting that a business that have longer opening hours has better reviews. 

SQL code used for analysis:

--SELECT business.name, business.city, category.category, business.stars, hours.hours, business.review_count, business.postal_code
FROM (business INNER JOIN category ON business.id = category.business_id)
INNER JOIN hours ON hours.business_id = category.business_id
WHERE business.city = 'Mesa'
GROUP BY business.stars
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         
--Businesses that are still open have higher ratings.

ii. Difference 2:

--Businesses that are still open have longer opening hours.          
         
SQL code used for analysis:

--SELECT business.name, business.is_open, category.category, business.stars, hours.hours, business.review_count, business.postal_code
FROM (business INNER JOIN category ON business.id = cateory.business_id)
INNER JOIN hours ON hours.business_id = category.business_id
WHERE business.city = 'Mesa'
GROUP BY business.is_open
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

--I'm going to analyse which city would be the best place to open a bar.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

--First of all I checked the cities with bars to be able to compare them.
I classified the bars by the number of stars to make it easier to compare.
I also added neighborhoods to get more data to analyze.                           
                  
iii. Output of your finished dataset:

+-------+----------------------------------------+------------------------+----------+-------------+-------------+
| stars | name                                   | neighborhood           | category | city        | star_rating |
+-------+----------------------------------------+------------------------+----------+-------------+-------------+
|   3.0 | Irish Republic                         |                        | Bars     | Chandler    | 2-3 stars   |
|   4.0 | Nabers Music, Bar & Eats               |                        | Bars     | Chandler    | 3-4 stars   |
|   2.0 | Iron City Grille                       |                        | Bars     | Coraopolis  | 1-2 stars   |
|   3.0 | Brubaker's Pub                         |                        | Bars     | Hudson      | 2-3 stars   |
|   3.5 | Hi Scores - Blue Diamond               | Southwest              | Bars     | Las Vegas   | 3-4 stars   |
|   4.0 | TWIISTED Burgers & Sushi               |                        | Bars     | Medina      | 3-4 stars   |
|   4.0 | Eklectic Pie - Mesa                    |                        | Bars     | Mesa        | 3-4 stars   |
|   3.0 | The Erin Mills Pump & Patio            |                        | Bars     | Mississauga | 2-3 stars   |
|   3.0 | Restaurant Rosalie                     | Ville-Marie            | Bars     | Montr√©al    | 2-3 stars   |
|   4.5 | The Wine Mill                          |                        | Bars     | Peninsula   | 4-5 stars   |
|   3.0 | Gallagher's                            |                        | Bars     | Phoenix     | 2-3 stars   |
|   4.0 | Bootleggers Modern American Smokehouse |                        | Bars     | Phoenix     | 3-4 stars   |
|   2.5 | The Fox & Fiddle                       | Greektown              | Bars     | Toronto     | 2-3 stars   |
|   3.5 | The Charlotte Room                     | Entertainment District | Bars     | Toronto     | 3-4 stars   |
|   4.0 | Halo Brewery                           | Wallace Emerson        | Bars     | Toronto     | 3-4 stars   |
|   4.5 | Cabin Fever                            | High Park              | Bars     | Toronto     | 4-5 stars   |
|   4.0 | Cabin Club                             |                        | Bars     | Westlake    | 3-4 stars   |
+-------+----------------------------------------+------------------------+----------+-------------+------------- 

iv. Provide the SQL code you used to create your final dataset:

--SELECT b.stars, b.name, b.neighborhood, c.category, b.city, CASE
WHEN B.stars BETWEEN 0 AND 1 THEN '0-1 stars'
WHEN B.stars BETWEEN 1 AND 2 THEN '1-2 stars'
WHEN B.stars BETWEEN 2 AND 3 THEN '2-3 stars'
WHEN B.stars BETWEEN 3 AND 4 THEN '3-4 stars'
WHEN B.stars BETWEEN 4 AND 5 THEN '4-5 stars'
END AS star_rating
FROM business b INNER JOIN category c on b.id = c.business_id
WHERE c.category IS 'Bars'
ORDER BY city, star_rating